@page "/devices/create"
@using Microsoft.EntityFrameworkCore
@attribute [Authorize]
@inject IDbContextFactory<IndustriellMaskinpark.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Device</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Device" OnValidSubmit="AddDevice" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert" />
            <div class="mb-3">
                <label for="location" class="form-label">Location:</label>
                <InputText id="location" @bind-Value="Device.Location" class="form-control" aria-required="true" />
                <ValidationMessage For="() => Device.Location" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="lastupdated" class="form-label">LastUpdated:</label>
                <InputDate id="lastupdated" @bind-Value="Device.LastUpdated" class="form-control" aria-required="true" />
                <ValidationMessage For="() => Device.LastUpdated" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="type" class="form-label">Type:</label>
                <InputSelect id="type" @bind-Value="Device.Type" class="form-control" aria-required="true">
                    @foreach (var type in Enum.GetValues<DeviceType>())
                    {
                        <option value="@type">@type</option>
                    }
                </InputSelect>
                <ValidationMessage For="() => Device.Type" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="status" class="form-label">Status:</label>
                <InputSelect id="status" @bind-Value="Device.Status" class="form-control" aria-required="true">
                    @foreach (var status in Enum.GetValues<DeviceStatus>())
                    {
                        <option value="@status">@status</option>
                    }
                </InputSelect>
                <ValidationMessage For="() => Device.Status" class="text-danger" />
            </div>
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/devices">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Device Device { get; set; } = new Device
        {
            Location = string.Empty, // Default value to satisfy the required attribute
            LastUpdated = DateTime.Now // Optional: Set default for LastUpdated
        };


    private async Task AddDevice()
    {
        Console.WriteLine($"Before Create: Location={Device!.Location}, LastUpdated={Device.LastUpdated}, Type={Device.Type}, Status={Device.Status}");
        using var context = DbFactory.CreateDbContext();
        context.Devices.Add(Device);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/devices");
    }
}
