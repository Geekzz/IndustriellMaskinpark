@inherits LayoutComponentBase
@implements IDisposable
@inject NavigationManager NavigationManager

<head>
    <link href="/bootstrap/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
    <link href="/app.css" rel="stylesheet">
</head>

<div class="page">
@*     <div class="sidebar">
        <NavMenu />
    </div> *@

    <main>
        <div class="top-row d-flex justify-content-around px-4">
            <div class="d-flex">
                <h2 class="mb-0">Management Central</h2>
                <AuthorizeView>
                    <Authorized>
                        <NavLink class="btn" href="dashboard">Dashboard</NavLink>
                    </Authorized>
                </AuthorizeView>
            </div>
            <div class="d-flex">
                @* <a href="https://learn.microsoft.com/aspnet/core/" target="_blank" class="btn">About</a> *@
                <AuthorizeView>
                    <Authorized>
                        <div class="nav-item">
                            <NavLink class="d-flex justify-content-center align-items-center py-2" href="message">
                                <span class="bi bi-chat-left-text-fill" aria-hidden="true"></span>
                            </NavLink>
                        </div>
                        <div class="nav-item">
                            <NavLink class="d-flex justify-content-center align-items-center py-2" href="graph">
                                <span class="bi bi-graph-down" aria-hidden="true"></span>
                            </NavLink>
                        </div>
                        <div class="nav-item">
                            <NavLink class="d-flex justify-content-center align-items-center py-2" href="settings">
                                <span class="bi bi-gear-fill" aria-hidden="true"></span>
                            </NavLink>
                        </div>



                        <div class="nav-item">
                            <NavLink class="nav-link" href="Account/Manage">
                                <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> @context.User.Identity?.Name
                            </NavLink>
                        </div>
                        <div class="nav-item">
                            <form action="Account/Logout" method="post">
                                <AntiforgeryToken />
                                <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                                <button type="submit" class="nav-link border-0 bg-transparent">
                                    <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                                </button>
                            </form>
                        </div>

                    </Authorized>
                    <NotAuthorized>
                        <div class="nav-item">
                            <NavLink class="nav-link" href="Account/Register">
                                <span class="bi bi-person-nav-menu" aria-hidden="true"></span> Register
                            </NavLink>
                        </div>
                        <div class="nav-item">
                            <NavLink class="nav-link" href="Account/Login">
                                <span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Login
                            </NavLink>
                        </div>
                    </NotAuthorized>
                </AuthorizeView>
            </div>
        </div>

        <div class="full-page-background" style="background-color: aliceblue; padding: 60px;">
            <article class="content px-4">
                @Body
            </article>
        </div>


    </main>
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>


@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}